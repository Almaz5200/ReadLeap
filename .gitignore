# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

# OS
*.vim
.DS_Store
.compile

*Info.plist
!GoogleService-Info.plist

buildServer.json

udids.txt

## Build generated
build/
DerivedData/
Tuist/Dependencies/graph.json
Tuist/Dependencies/SwiftPackageManager/

## Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/


## Other
*.moved-aside
*.xccheckout
*.xcscmblueprint
.idea

## Obj-C/Swift specific
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

# google services secret file
GoogleService-Info.plist

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
Pods/
.idea/.name
.idea/encodings.xml
.idea/modules.xml
.idea/vcs.xml
.idea/workspace.xml
.idea/xcode.xml
.idea/runConfigurations/Etalon2.0.xml

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build

# fastlane
#
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Generamba templates
Templates/viper

# R.swift generated file
R.generated.swift
